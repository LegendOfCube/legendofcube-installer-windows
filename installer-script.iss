; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Legend of Cube"
#define MyAppExeName "LegendOfCube.exe"
#define MyAppVersion GetFileVersion('install-files\LegendOfCube.exe')
#define DotNetInstaller "dotNetFx40_Client_x86_x64.exe"
#define XNAInstaller "xnafx40_redist.msi"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{6AD01120-E873-4820-B79C-B26A792C6949}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
DefaultDirName={pf}\LegendOfCube
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputDir=latest-version
OutputBaseFilename=legendofcube-setup-{#MyAppVersion}
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "install-files\*"; Excludes: ".gitignore,*.pdb"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "dependencies\{#DotNetInstaller}"; DestDir: "{tmp}"
Source: "dependencies\{#XNAInstaller}"; DestDir: "{tmp}"
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{tmp}\{#DotNetInstaller}"; Parameters: "/q /norestart"; Check: DotNet40NotInstalled
Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\{#XNAInstaller}"""; Check: XNANotInstalled
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[code]
function DotNet40NotInstalled: Boolean;
begin
    Result := not RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Microsoft\.NETFramework\policy\v4.0');
end;

function XNANotInstalled: Boolean;
begin
    // Look in four different places, there might be a documenation problem.
    // Only "v4.0 Refresh" keys should be checked according to the
    // documentation (https://msdn.microsoft.com/en-us/library/bb464156.aspx),
    // but it is not available after install on at least some systems
    Result := not (RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Microsoft\XNA\Framework\v4.0 Refresh') or
                   RegValueExists(HKEY_LOCAL_MACHINE, 'Software\Microsoft\XNA\Framework\v4.0', 'Refresh1Installed') or
                   RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\Wow6432Node\Microsoft\XNA\Framework\v4.0 Refresh') or
                   RegValueExists(HKEY_LOCAL_MACHINE, 'Software\Wow6432Node\Microsoft\XNA\Framework\v4.0', 'Refresh1Installed'));
end;